import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:flutter/material.dart';
import 'package:chatbotbnn/service/app_config.dart';
import 'package:chatbotbnn/model/chatbot_config.dart';

Future<List<DataConfig>> fetchChatbotConfig(String chatbotCode) async {
  try {
    final response = await http.post(
      Uri.parse('${ApiConfig.baseUrlBasic}chatbot-config/get-chatbot-config'),
      headers: await ApiConfig.getHeaders(),
      body: jsonEncode({'chatbot_code': chatbotCode}),
    );
    debugPrint(' KQ:  ${response.body}');
    if (response.statusCode == 200) {
      String responseBody = response.body.trim(); // X√≥a kho·∫£ng tr·∫Øng ƒë·∫ßu/cu·ªëi
      debugPrint("üì• JSON t·ª´ API: ${responseBody.length} k√Ω t·ª±");

      // Ki·ªÉm tra n·∫øu d·ªØ li·ªáu ph·∫£n h·ªìi b·ªã r·ªóng ho·∫∑c l√† HTML l·ªói t·ª´ server
      if (responseBody.isEmpty ||
          responseBody.startsWith('<!DOCTYPE') ||
          responseBody.startsWith('<html')) {
        throw Exception('‚ùå Ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá ho·∫∑c l·ªói t·ª´ server.');
      }

      // Ki·ªÉm tra JSON c√≥ d·∫•u k·∫øt th√∫c h·ª£p l·ªá
      if (!(responseBody.startsWith('{') || responseBody.startsWith('['))) {
        throw Exception('‚ùå D·ªØ li·ªáu kh√¥ng ph·∫£i JSON h·ª£p l·ªá.');
      }

      try {
        final decodedJson = jsonDecode(responseBody);

        if (decodedJson is! Map<String, dynamic>) {
          throw Exception('‚ùå JSON kh√¥ng ƒë√∫ng c·∫•u tr√∫c mong ƒë·ª£i.');
        }

        final chatbotConfig = ChatbotConfig.fromJson(decodedJson);
        final result = chatbotConfig.data ?? [];

        return result;
      } on FormatException catch (jsonError) {
        debugPrint("‚ùå JSON kh√¥ng h·ª£p l·ªá: $jsonError");
        debugPrint("üìÑ N·ªôi dung JSON l·ªói: $responseBody");
        throw Exception('‚ùå L·ªói gi·∫£i m√£ JSON.');
      }
    } else {
      throw Exception(
          '‚ùå L·ªói HTTP ${response.statusCode}: ${response.reasonPhrase}');
    }
  } catch (e) {
    debugPrint("‚ùå L·ªói x·ª≠ l√Ω: $e");
    return [];
  }
}
